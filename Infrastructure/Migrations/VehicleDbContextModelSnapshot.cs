// <auto-generated />
using System;
using Infrastructure.Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Entity.Model.Vehicle", b =>
                {
                    b.Property<int>("Vehicle_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Vehicle_Id"), 1L, 1);

                    b.Property<int>("VehicleType_id")
                        .HasColumnType("int");

                    b.Property<string>("Vehicle_Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_SerialNumber")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Vehicle_StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Vehicle_StartingMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Vehicle_Status")
                        .HasColumnType("bit");

                    b.HasKey("Vehicle_Id");

                    b.HasIndex("VehicleType_id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.VehicleMth", b =>
                {
                    b.Property<int>("Mth_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mth_Id"), 1L, 1);

                    b.Property<decimal>("Mth_Register")
                        .HasColumnType("decimal(5,1)");

                    b.Property<DateTime>("Mth_RegisterDate")
                        .HasPrecision(5)
                        .HasColumnType("datetime2(5)");

                    b.Property<DateTime>("Mth_RegisterInsert")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 12, 2, 22, 42, 6, 281, DateTimeKind.Local).AddTicks(7906));

                    b.Property<int>("Vehicle_Id")
                        .HasColumnType("int");

                    b.HasKey("Mth_Id");

                    b.HasIndex("Vehicle_Id");

                    b.ToTable("VehicleMths");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.VehicleType", b =>
                {
                    b.Property<int>("VehicleType_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleType_Id"), 1L, 1);

                    b.Property<string>("VehicleType_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("VehicleType_Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.Vehicle", b =>
                {
                    b.HasOne("Infrastructure.Entity.Model.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleType_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.VehicleMth", b =>
                {
                    b.HasOne("Infrastructure.Entity.Model.Vehicle", "Vehicle")
                        .WithMany("MthRegisters")
                        .HasForeignKey("Vehicle_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.Vehicle", b =>
                {
                    b.Navigation("MthRegisters");
                });

            modelBuilder.Entity("Infrastructure.Entity.Model.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
